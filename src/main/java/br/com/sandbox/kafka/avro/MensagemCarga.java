/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.sandbox.kafka.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Schema para mensagens de teste de carga */
@org.apache.avro.specific.AvroGenerated
public class MensagemCarga extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2717958453768620874L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MensagemCarga\",\"namespace\":\"br.com.sandbox.kafka.avro\",\"doc\":\"Schema para mensagens de teste de carga\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"Identificador único da mensagem\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"Timestamp de criação da mensagem em milissegundos\"},{\"name\":\"sequencia\",\"type\":\"long\",\"doc\":\"Número de sequência da mensagem\"},{\"name\":\"dados\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Registro\",\"fields\":[{\"name\":\"indice\",\"type\":\"int\"},{\"name\":\"texto\",\"type\":\"string\"},{\"name\":\"numero\",\"type\":\"double\"},{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"uuid\",\"type\":\"string\"}]}},\"doc\":\"Dados estruturados da mensagem\"},{\"name\":\"versao\",\"type\":\"string\",\"doc\":\"Versão do schema\",\"default\":\"1.0\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MensagemCarga> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MensagemCarga> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<MensagemCarga> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<MensagemCarga> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<MensagemCarga> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this MensagemCarga to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a MensagemCarga from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a MensagemCarga instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static MensagemCarga fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Identificador único da mensagem */
  private java.lang.CharSequence id;
  /** Timestamp de criação da mensagem em milissegundos */
  private long timestamp;
  /** Número de sequência da mensagem */
  private long sequencia;
  /** Dados estruturados da mensagem */
  private java.util.List<br.com.sandbox.kafka.avro.Registro> dados;
  /** Versão do schema */
  private java.lang.CharSequence versao;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MensagemCarga() {}

  /**
   * All-args constructor.
   * @param id Identificador único da mensagem
   * @param timestamp Timestamp de criação da mensagem em milissegundos
   * @param sequencia Número de sequência da mensagem
   * @param dados Dados estruturados da mensagem
   * @param versao Versão do schema
   */
  public MensagemCarga(java.lang.CharSequence id, java.lang.Long timestamp, java.lang.Long sequencia, java.util.List<br.com.sandbox.kafka.avro.Registro> dados, java.lang.CharSequence versao) {
    this.id = id;
    this.timestamp = timestamp;
    this.sequencia = sequencia;
    this.dados = dados;
    this.versao = versao;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return timestamp;
    case 2: return sequencia;
    case 3: return dados;
    case 4: return versao;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: timestamp = (java.lang.Long)value$; break;
    case 2: sequencia = (java.lang.Long)value$; break;
    case 3: dados = (java.util.List<br.com.sandbox.kafka.avro.Registro>)value$; break;
    case 4: versao = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return Identificador único da mensagem
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * Identificador único da mensagem
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return Timestamp de criação da mensagem em milissegundos
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * Timestamp de criação da mensagem em milissegundos
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'sequencia' field.
   * @return Número de sequência da mensagem
   */
  public long getSequencia() {
    return sequencia;
  }


  /**
   * Sets the value of the 'sequencia' field.
   * Número de sequência da mensagem
   * @param value the value to set.
   */
  public void setSequencia(long value) {
    this.sequencia = value;
  }

  /**
   * Gets the value of the 'dados' field.
   * @return Dados estruturados da mensagem
   */
  public java.util.List<br.com.sandbox.kafka.avro.Registro> getDados() {
    return dados;
  }


  /**
   * Sets the value of the 'dados' field.
   * Dados estruturados da mensagem
   * @param value the value to set.
   */
  public void setDados(java.util.List<br.com.sandbox.kafka.avro.Registro> value) {
    this.dados = value;
  }

  /**
   * Gets the value of the 'versao' field.
   * @return Versão do schema
   */
  public java.lang.CharSequence getVersao() {
    return versao;
  }


  /**
   * Sets the value of the 'versao' field.
   * Versão do schema
   * @param value the value to set.
   */
  public void setVersao(java.lang.CharSequence value) {
    this.versao = value;
  }

  /**
   * Creates a new MensagemCarga RecordBuilder.
   * @return A new MensagemCarga RecordBuilder
   */
  public static br.com.sandbox.kafka.avro.MensagemCarga.Builder newBuilder() {
    return new br.com.sandbox.kafka.avro.MensagemCarga.Builder();
  }

  /**
   * Creates a new MensagemCarga RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MensagemCarga RecordBuilder
   */
  public static br.com.sandbox.kafka.avro.MensagemCarga.Builder newBuilder(br.com.sandbox.kafka.avro.MensagemCarga.Builder other) {
    if (other == null) {
      return new br.com.sandbox.kafka.avro.MensagemCarga.Builder();
    } else {
      return new br.com.sandbox.kafka.avro.MensagemCarga.Builder(other);
    }
  }

  /**
   * Creates a new MensagemCarga RecordBuilder by copying an existing MensagemCarga instance.
   * @param other The existing instance to copy.
   * @return A new MensagemCarga RecordBuilder
   */
  public static br.com.sandbox.kafka.avro.MensagemCarga.Builder newBuilder(br.com.sandbox.kafka.avro.MensagemCarga other) {
    if (other == null) {
      return new br.com.sandbox.kafka.avro.MensagemCarga.Builder();
    } else {
      return new br.com.sandbox.kafka.avro.MensagemCarga.Builder(other);
    }
  }

  /**
   * RecordBuilder for MensagemCarga instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MensagemCarga>
    implements org.apache.avro.data.RecordBuilder<MensagemCarga> {

    /** Identificador único da mensagem */
    private java.lang.CharSequence id;
    /** Timestamp de criação da mensagem em milissegundos */
    private long timestamp;
    /** Número de sequência da mensagem */
    private long sequencia;
    /** Dados estruturados da mensagem */
    private java.util.List<br.com.sandbox.kafka.avro.Registro> dados;
    /** Versão do schema */
    private java.lang.CharSequence versao;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.sandbox.kafka.avro.MensagemCarga.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.sequencia)) {
        this.sequencia = data().deepCopy(fields()[2].schema(), other.sequencia);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.dados)) {
        this.dados = data().deepCopy(fields()[3].schema(), other.dados);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.versao)) {
        this.versao = data().deepCopy(fields()[4].schema(), other.versao);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing MensagemCarga instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.sandbox.kafka.avro.MensagemCarga other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[1].schema(), other.timestamp);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sequencia)) {
        this.sequencia = data().deepCopy(fields()[2].schema(), other.sequencia);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dados)) {
        this.dados = data().deepCopy(fields()[3].schema(), other.dados);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.versao)) {
        this.versao = data().deepCopy(fields()[4].schema(), other.versao);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * Identificador único da mensagem
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * Identificador único da mensagem
      * @param value The value of 'id'.
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * Identificador único da mensagem
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * Identificador único da mensagem
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * Timestamp de criação da mensagem em milissegundos
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * Timestamp de criação da mensagem em milissegundos
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder setTimestamp(long value) {
      validate(fields()[1], value);
      this.timestamp = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * Timestamp de criação da mensagem em milissegundos
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * Timestamp de criação da mensagem em milissegundos
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder clearTimestamp() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'sequencia' field.
      * Número de sequência da mensagem
      * @return The value.
      */
    public long getSequencia() {
      return sequencia;
    }


    /**
      * Sets the value of the 'sequencia' field.
      * Número de sequência da mensagem
      * @param value The value of 'sequencia'.
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder setSequencia(long value) {
      validate(fields()[2], value);
      this.sequencia = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'sequencia' field has been set.
      * Número de sequência da mensagem
      * @return True if the 'sequencia' field has been set, false otherwise.
      */
    public boolean hasSequencia() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'sequencia' field.
      * Número de sequência da mensagem
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder clearSequencia() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'dados' field.
      * Dados estruturados da mensagem
      * @return The value.
      */
    public java.util.List<br.com.sandbox.kafka.avro.Registro> getDados() {
      return dados;
    }


    /**
      * Sets the value of the 'dados' field.
      * Dados estruturados da mensagem
      * @param value The value of 'dados'.
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder setDados(java.util.List<br.com.sandbox.kafka.avro.Registro> value) {
      validate(fields()[3], value);
      this.dados = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'dados' field has been set.
      * Dados estruturados da mensagem
      * @return True if the 'dados' field has been set, false otherwise.
      */
    public boolean hasDados() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'dados' field.
      * Dados estruturados da mensagem
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder clearDados() {
      dados = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'versao' field.
      * Versão do schema
      * @return The value.
      */
    public java.lang.CharSequence getVersao() {
      return versao;
    }


    /**
      * Sets the value of the 'versao' field.
      * Versão do schema
      * @param value The value of 'versao'.
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder setVersao(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.versao = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'versao' field has been set.
      * Versão do schema
      * @return True if the 'versao' field has been set, false otherwise.
      */
    public boolean hasVersao() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'versao' field.
      * Versão do schema
      * @return This builder.
      */
    public br.com.sandbox.kafka.avro.MensagemCarga.Builder clearVersao() {
      versao = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MensagemCarga build() {
      try {
        MensagemCarga record = new MensagemCarga();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.timestamp = fieldSetFlags()[1] ? this.timestamp : (java.lang.Long) defaultValue(fields()[1]);
        record.sequencia = fieldSetFlags()[2] ? this.sequencia : (java.lang.Long) defaultValue(fields()[2]);
        record.dados = fieldSetFlags()[3] ? this.dados : (java.util.List<br.com.sandbox.kafka.avro.Registro>) defaultValue(fields()[3]);
        record.versao = fieldSetFlags()[4] ? this.versao : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MensagemCarga>
    WRITER$ = (org.apache.avro.io.DatumWriter<MensagemCarga>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MensagemCarga>
    READER$ = (org.apache.avro.io.DatumReader<MensagemCarga>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.id);

    out.writeLong(this.timestamp);

    out.writeLong(this.sequencia);

    long size0 = this.dados.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (br.com.sandbox.kafka.avro.Registro e0: this.dados) {
      actualSize0++;
      out.startItem();
      e0.customEncode(out);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    out.writeString(this.versao);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);

      this.timestamp = in.readLong();

      this.sequencia = in.readLong();

      long size0 = in.readArrayStart();
      java.util.List<br.com.sandbox.kafka.avro.Registro> a0 = this.dados;
      if (a0 == null) {
        a0 = new SpecificData.Array<br.com.sandbox.kafka.avro.Registro>((int)size0, SCHEMA$.getField("dados").schema());
        this.dados = a0;
      } else a0.clear();
      SpecificData.Array<br.com.sandbox.kafka.avro.Registro> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<br.com.sandbox.kafka.avro.Registro>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          br.com.sandbox.kafka.avro.Registro e0 = (ga0 != null ? ga0.peek() : null);
          if (e0 == null) {
            e0 = new br.com.sandbox.kafka.avro.Registro();
          }
          e0.customDecode(in);
          a0.add(e0);
        }
      }

      this.versao = in.readString(this.versao instanceof Utf8 ? (Utf8)this.versao : null);

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readString(this.id instanceof Utf8 ? (Utf8)this.id : null);
          break;

        case 1:
          this.timestamp = in.readLong();
          break;

        case 2:
          this.sequencia = in.readLong();
          break;

        case 3:
          long size0 = in.readArrayStart();
          java.util.List<br.com.sandbox.kafka.avro.Registro> a0 = this.dados;
          if (a0 == null) {
            a0 = new SpecificData.Array<br.com.sandbox.kafka.avro.Registro>((int)size0, SCHEMA$.getField("dados").schema());
            this.dados = a0;
          } else a0.clear();
          SpecificData.Array<br.com.sandbox.kafka.avro.Registro> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<br.com.sandbox.kafka.avro.Registro>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              br.com.sandbox.kafka.avro.Registro e0 = (ga0 != null ? ga0.peek() : null);
              if (e0 == null) {
                e0 = new br.com.sandbox.kafka.avro.Registro();
              }
              e0.customDecode(in);
              a0.add(e0);
            }
          }
          break;

        case 4:
          this.versao = in.readString(this.versao instanceof Utf8 ? (Utf8)this.versao : null);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










